name: Deploy Preview

env:
  COMMENT_HEADER: clerk-docs-preview

on:
  pull_request_target:
    types: [labeled, synchronize]

jobs:
  deploy:
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    permissions:
      contents: write
      pull-requests: write
    if: ${{ github.event.action == 'labeled' && github.event.label.name == 'deploy-preview' }}
    runs-on: ubuntu-latest

    steps:
      - name: Echo
        run: |
          echo "${{ toJson(github.event) }}"
      
      - name: Get date
        run: |
          echo "DATE=$(date -u +"%b %d, %Y %I:%M %p")" >> $GITHUB_ENV
      
      - uses: actions/checkout@v3.5.3

      - name: Checkout fork
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: checkout-fork
        # if: ${{ github.event.pull_request.head.repo.fork == true }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
          git_branch=$(git rev-parse --abbrev-ref HEAD)
          git push origin $git_branch
          echo "branch=$git_branch" >> $GITHUB_OUTPUT

      - name: Checkout application
        uses: actions/checkout@v3.5.3
        with:
          repository: clerkinc/clerk-marketing
          token: ${{ secrets.CLERK_GH_TOKEN }}
          path: app
          ref: brk.feat/render-mdx-prod

      - run: npm install --global vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    
      - name: Deploy to Vercel
        id: vercel-deploy
        env:
          DOCS_BRANCH: ${{ steps.checkout-fork.outputs.branch || github.event.pull_request.head.ref }}
        run: |
          cd app
          git checkout -b preview/$DOCS_BRANCH
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --build-env DOCS_BRANCH=$DOCS_BRANCH --env DOCS_BRANCH=$DOCS_BRANCH --no-wait > deployment_url.txt
          echo "url=$(cat deployment_url.txt)" >> $GITHUB_OUTPUT

      - name: Create preview comment - baking
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: ${{ env.COMMENT_HEADER}}
          message: |
            Hey @${{ github.event.sender.login }}, your docs preview is currently baking and should be available shortly.

            | Status | Preview | Updated (UTC) |
            | :-- | :-- | :-- |
            | :cook: _Baking..._ | [Inspect](${{ steps.vercel-deploy.outputs.url }}) | ${{ env.DATE }} |
      
      - name: Get date
        run: |
          echo "DATE=$(date -u +"%b %d, %Y %I:%M %p")" >> $GITHUB_ENV

      - name: Wait for deployment
        id: vercel-wait-for-deploy
        run: |
          vercel inspect --token=${{ secrets.VERCEL_TOKEN }} --wait ${{ steps.vercel-deploy.outputs.url }}
          vercel alias set ${{ steps.vercel-deploy.outputs.url }} docs-preview-${{ github.event.pull_request.number }}.clerkpreview.com --token=${{ secrets.VERCEL_TOKEN }}
          echo "stable_url=https://docs-preview-${{ github.event.pull_request.number }}.clerkpreview.com" >> $GITHUB_OUTPUT
      
      - name: Create preview comment - deployed
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: ${{ env.COMMENT_HEADER }}
          message: |
            Hey @${{ github.event.sender.login }}, your docs preview is available.

            | Status | Preview | Updated (UTC) |
            | :-- | :-- | :-- |
            | :cookie: Deployed | [Visit preview](${{ steps.vercel-wait-for-deploy.outputs.stable_url }}/docs) | ${{ env.DATE }} |

            <!-- deployed:true -->

  revalidate:
    if: ${{ github.event.action == 'synchronize' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      CLERK_COM_BASE_URL: https://docs-preview-${{ github.event.pull_request.number }}.clerkpreview.com
    steps:
      - name: Find comment
        uses: peter-evans/find-comment@v2.4.0
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: deployed:true
        
      - name: Get date
        run: |
          echo "DATE=$(date -u +"%b %d, %Y %I:%M %p")" >> $GITHUB_ENV

      - name: Trigger revalidate
        if: ${{ steps.find-comment.outputs.comment-id != 0 }}
        run: |
          curl -X POST ${{ env.CLERK_COM_BASE_URL }}/api/revalidate-docs \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.REVALIDATE_DOCS_SECRET }}" \
            -d "{\"paths\": \"*\"}"

      - name: Create preview comment - updated
        if: ${{ steps.find-comment.outputs.comment-id != 0 }}
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: ${{ env.COMMENT_HEADER }}
          message: |
            Hey @${{ github.event.sender.login }}, your docs preview is available.

            | Status | Preview | Updated (UTC) |
            | :-- | :-- | :-- |
            | :cookie: Updated | [Visit preview](${{ env.CLERK_COM_BASE_URL }}/docs) | ${{ env.DATE }} |

            <!-- deployed:true -->
            
