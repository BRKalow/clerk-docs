name: Deploy Preview

on:
  pull_request_target:
    types: [labeled]

jobs:
  deploy:
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    permissions:
      contents: write
      pull-requests: write
    if: ${{ github.event.label.name == 'deploy-preview' }}
    runs-on: ubuntu-latest

    steps:
      - name: Echo
        run: |
          echo "${{ toJson(github.event) }}"
      
      - uses: actions/checkout@v3.5.3

      - name: Checkout fork
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: checkout-fork
        # if: ${{ github.event.pull_request.head.repo.fork == true }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
          git_branch=$(git rev-parse --abbrev-ref HEAD)
          git push origin $git_branch
          echo "branch=$git_branch" >> $GITHUB_OUTPUT

      # - name: Checkout application
      #   uses: actions/checkout@v3.5.3
      #   with:
      #     repository: clerkinc/clerk-marketing
      #     token: ${{ secrets.CLERK_GH_TOKEN }}
      #     path: app
      #     ref: production

      - run: npm install --global vercel@latest

      - name: Pull vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    
      - name: Deploy to Vercel
        id: vercel-deploy
        env:
          DOCS_BRANCH: ${{ steps.checkout-fork.outputs.branch || github.event.pull_request.head.ref }}
        run: |
          # cd app
          git checkout -b preview/${{ github.event.pull_request.head.sha }}
          echo "vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --build-env DOCS_BRANCH=$DOCS_BRANCH --env DOCS_BRANCH=$DOCS_BRANCH --no-wait > deployment_url.txt"
          echo "url=$(cat deployment_url.txt)" >> $GITHUB_OUTPUT
      
      - name: Echo deployment URL
        run: |
          echo "{{ steps.vercel-deploy.outputs.url }}"
